diff --git a/RnDiffApp/_bundle/config b/RnDiffApp/.bundle/config
similarity index 100%
rename from RnDiffApp/_bundle/config
rename to RnDiffApp/.bundle/config
diff --git a/RnDiffApp/.flowconfig b/RnDiffApp/.flowconfig
index f0bc7b9aa3..3782e447cd 100644
--- a/RnDiffApp/.flowconfig
+++ b/RnDiffApp/.flowconfig
@@ -11,6 +11,8 @@ node_modules/react-native/Libraries/polyfills/.*
 ; Flow doesn't support platforms
 .*/Libraries/Utilities/LoadingView.js
 
+.*/node_modules/resolve/test/resolver/malformed_package_json/package\.json$
+
 [untyped]
 .*/node_modules/@react-native-community/cli/.*/.*
 
@@ -50,7 +52,6 @@ nonstrict-import=warn
 deprecated-type=warn
 unsafe-getters-setters=warn
 unnecessary-invariant=warn
-signature-verification-failure=warn
 
 [strict]
 deprecated-type
@@ -62,4 +63,4 @@ untyped-import
 untyped-type-import
 
 [version]
-^0.162.0
+^0.182.0
diff --git a/RnDiffApp/.gitignore b/RnDiffApp/.gitignore
index cc53454ef4..2423126f72 100644
--- a/RnDiffApp/.gitignore
+++ b/RnDiffApp/.gitignore
@@ -20,6 +20,7 @@ DerivedData
 *.hmap
 *.ipa
 *.xcuserstate
+ios/.xcode.env.local
 
 # Android/IntelliJ
 #
@@ -29,6 +30,7 @@ build/
 local.properties
 *.iml
 *.hprof
+.cxx/
 
 # node.js
 #
@@ -49,12 +51,14 @@ buck-out/
 # For more information about the recommended setup visit:
 # https://docs.fastlane.tools/best-practices/source-control/
 
-*/fastlane/report.xml
-*/fastlane/Preview.html
-*/fastlane/screenshots
+**/fastlane/report.xml
+**/fastlane/Preview.html
+**/fastlane/screenshots
+**/fastlane/test_output
 
 # Bundle artifact
 *.jsbundle
 
-# CocoaPods
+# Ruby / CocoaPods
 /ios/Pods/
+/vendor/bundle/
diff --git a/RnDiffApp/.node-version b/RnDiffApp/.node-version
new file mode 100644
index 0000000000..b6a7d89c68
--- /dev/null
+++ b/RnDiffApp/.node-version
@@ -0,0 +1 @@
+16
diff --git a/RnDiffApp/.prettierrc.js b/RnDiffApp/.prettierrc.js
index 84196d95f4..2b540746a7 100644
--- a/RnDiffApp/.prettierrc.js
+++ b/RnDiffApp/.prettierrc.js
@@ -1,7 +1,7 @@
 module.exports = {
+  arrowParens: 'avoid',
+  bracketSameLine: true,
   bracketSpacing: false,
-  jsxBracketSameLine: true,
   singleQuote: true,
   trailingComma: 'all',
-  arrowParens: 'avoid',
 };
diff --git a/RnDiffApp/.ruby-version b/RnDiffApp/.ruby-version
new file mode 100644
index 0000000000..a603bb50a2
--- /dev/null
+++ b/RnDiffApp/.ruby-version
@@ -0,0 +1 @@
+2.7.5
diff --git a/RnDiffApp/App.js b/RnDiffApp/App.js
index f85f38d87a..4c97733b30 100644
--- a/RnDiffApp/App.js
+++ b/RnDiffApp/App.js
@@ -26,6 +26,8 @@ import {
   ReloadInstructions,
 } from 'react-native/Libraries/NewAppScreen';
 
+/* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's
+ * LTI update could not be added via codemod */
 const Section = ({children, title}): Node => {
   const isDarkMode = useColorScheme() === 'dark';
   return (
@@ -61,7 +63,10 @@ const App: () => Node = () => {
 
   return (
     <SafeAreaView style={backgroundStyle}>
-      <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />
+      <StatusBar
+        barStyle={isDarkMode ? 'light-content' : 'dark-content'}
+        backgroundColor={backgroundStyle.backgroundColor}
+      />
       <ScrollView
         contentInsetAdjustmentBehavior="automatic"
         style={backgroundStyle}>
diff --git a/RnDiffApp/Gemfile b/RnDiffApp/Gemfile
index 2c3edcf4b7..5efda89f45 100644
--- a/RnDiffApp/Gemfile
+++ b/RnDiffApp/Gemfile
@@ -1,6 +1,6 @@
 source 'https://rubygems.org'
 
 # You may use http://rbenv.org/ or https://rvm.io/ to install and use this version
-ruby '2.7.4'
+ruby '2.7.5'
 
 gem 'cocoapods', '~> 1.11', '>= 1.11.2'
diff --git a/RnDiffApp/Gemfile.lock b/RnDiffApp/Gemfile.lock
deleted file mode 100644
index e0f260750f..0000000000
--- a/RnDiffApp/Gemfile.lock
+++ /dev/null
@@ -1,100 +0,0 @@
-GEM
-  remote: https://rubygems.org/
-  specs:
-    CFPropertyList (3.0.4)
-      rexml
-    activesupport (6.1.4.1)
-      concurrent-ruby (~> 1.0, >= 1.0.2)
-      i18n (>= 1.6, < 2)
-      minitest (>= 5.1)
-      tzinfo (~> 2.0)
-      zeitwerk (~> 2.3)
-    addressable (2.8.0)
-      public_suffix (>= 2.0.2, < 5.0)
-    algoliasearch (1.27.5)
-      httpclient (~> 2.8, >= 2.8.3)
-      json (>= 1.5.1)
-    atomos (0.1.3)
-    claide (1.0.3)
-    cocoapods (1.11.2)
-      addressable (~> 2.8)
-      claide (>= 1.0.2, < 2.0)
-      cocoapods-core (= 1.11.2)
-      cocoapods-deintegrate (>= 1.0.3, < 2.0)
-      cocoapods-downloader (>= 1.4.0, < 2.0)
-      cocoapods-plugins (>= 1.0.0, < 2.0)
-      cocoapods-search (>= 1.0.0, < 2.0)
-      cocoapods-trunk (>= 1.4.0, < 2.0)
-      cocoapods-try (>= 1.1.0, < 2.0)
-      colored2 (~> 3.1)
-      escape (~> 0.0.4)
-      fourflusher (>= 2.3.0, < 3.0)
-      gh_inspector (~> 1.0)
-      molinillo (~> 0.8.0)
-      nap (~> 1.0)
-      ruby-macho (>= 1.0, < 3.0)
-      xcodeproj (>= 1.21.0, < 2.0)
-    cocoapods-core (1.11.2)
-      activesupport (>= 5.0, < 7)
-      addressable (~> 2.8)
-      algoliasearch (~> 1.0)
-      concurrent-ruby (~> 1.1)
-      fuzzy_match (~> 2.0.4)
-      nap (~> 1.0)
-      netrc (~> 0.11)
-      public_suffix (~> 4.0)
-      typhoeus (~> 1.0)
-    cocoapods-deintegrate (1.0.5)
-    cocoapods-downloader (1.5.1)
-    cocoapods-plugins (1.0.0)
-      nap
-    cocoapods-search (1.0.1)
-    cocoapods-trunk (1.6.0)
-      nap (>= 0.8, < 2.0)
-      netrc (~> 0.11)
-    cocoapods-try (1.2.0)
-    colored2 (3.1.2)
-    concurrent-ruby (1.1.9)
-    escape (0.0.4)
-    ethon (0.15.0)
-      ffi (>= 1.15.0)
-    ffi (1.15.4)
-    fourflusher (2.3.1)
-    fuzzy_match (2.0.4)
-    gh_inspector (1.1.3)
-    httpclient (2.8.3)
-    i18n (1.8.10)
-      concurrent-ruby (~> 1.0)
-    json (2.6.0)
-    minitest (5.14.4)
-    molinillo (0.8.0)
-    nanaimo (0.3.0)
-    nap (1.1.0)
-    netrc (0.11.0)
-    public_suffix (4.0.6)
-    rexml (3.2.5)
-    ruby-macho (2.5.1)
-    typhoeus (1.4.0)
-      ethon (>= 0.9.0)
-    tzinfo (2.0.4)
-      concurrent-ruby (~> 1.0)
-    xcodeproj (1.21.0)
-      CFPropertyList (>= 2.3.3, < 4.0)
-      atomos (~> 0.1.3)
-      claide (>= 1.0.2, < 2.0)
-      colored2 (~> 3.1)
-      nanaimo (~> 0.3.0)
-      rexml (~> 3.2.4)
-    zeitwerk (2.5.1)
-
-PLATFORMS
-  ruby
-
-DEPENDENCIES
-  cocoapods (~> 1.11, >= 1.11.2)
-
-RUBY VERSION
-   ruby 2.7.4p191
-
-BUNDLED WITH
-   2.2.29
diff --git a/RnDiffApp/_ruby-version b/RnDiffApp/_ruby-version
deleted file mode 100644
index a4dd9dba4f..0000000000
--- a/RnDiffApp/_ruby-version
+++ /dev/null
@@ -1 +0,0 @@
-2.7.4
diff --git a/RnDiffApp/android/app/build.gradle b/RnDiffApp/android/app/build.gradle
index e8c55e06bc..4e19cfde8b 100644
--- a/RnDiffApp/android/app/build.gradle
+++ b/RnDiffApp/android/app/build.gradle
@@ -1,6 +1,7 @@
 apply plugin: "com.android.application"
 
 import com.android.build.OutputFile
+import org.apache.tools.ant.taskdefs.condition.Os
 
 /**
  * The react.gradle file registers a task for each build variant (e.g. bundleDebugJsAndAssets
@@ -78,7 +79,7 @@ import com.android.build.OutputFile
  */
 
 project.ext.react = [
-    enableHermes: false,  // clean and rebuild if changing
+    enableHermes: true,  // clean and rebuild if changing
 ]
 
 apply from: "../../node_modules/react-native/react.gradle"
@@ -121,9 +122,12 @@ def jscFlavor = 'org.webkit:android-jsc:+'
 def enableHermes = project.ext.react.get("enableHermes", false);
 
 /**
- * Architectures to build native code for in debug.
+ * Architectures to build native code for.
  */
-def nativeArchitectures = project.getProperties().get("reactNativeDebugArchitectures")
+def reactNativeArchitectures() {
+    def value = project.getProperties().get("reactNativeArchitectures")
+    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
+}
 
 android {
     ndkVersion rootProject.ext.ndkVersion
@@ -136,13 +140,74 @@ android {
         targetSdkVersion rootProject.ext.targetSdkVersion
         versionCode 1
         versionName "1.0"
+        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
+
+        if (isNewArchitectureEnabled()) {
+            // We configure the CMake build only if you decide to opt-in for the New Architecture.
+            externalNativeBuild {
+                cmake {
+                    arguments "-DPROJECT_BUILD_DIR=$buildDir",
+                        "-DREACT_ANDROID_DIR=$rootDir/../node_modules/react-native/ReactAndroid",
+                        "-DREACT_ANDROID_BUILD_DIR=$rootDir/../node_modules/react-native/ReactAndroid/build",
+                        "-DNODE_MODULES_DIR=$rootDir/../node_modules",
+                        "-DANDROID_STL=c++_shared"
+                }
+            }
+            if (!enableSeparateBuildPerCPUArchitecture) {
+                ndk {
+                    abiFilters (*reactNativeArchitectures())
+                }
+            }
+        }
+    }
+
+    if (isNewArchitectureEnabled()) {
+        // We configure the NDK build only if you decide to opt-in for the New Architecture.
+        externalNativeBuild {
+            cmake {
+                path "$projectDir/src/main/jni/CMakeLists.txt"
+            }
+        }
+        def reactAndroidProjectDir = project(':ReactAndroid').projectDir
+        def packageReactNdkDebugLibs = tasks.register("packageReactNdkDebugLibs", Copy) {
+            dependsOn(":ReactAndroid:packageReactNdkDebugLibsForBuck")
+            from("$reactAndroidProjectDir/src/main/jni/prebuilt/lib")
+            into("$buildDir/react-ndk/exported")
+        }
+        def packageReactNdkReleaseLibs = tasks.register("packageReactNdkReleaseLibs", Copy) {
+            dependsOn(":ReactAndroid:packageReactNdkReleaseLibsForBuck")
+            from("$reactAndroidProjectDir/src/main/jni/prebuilt/lib")
+            into("$buildDir/react-ndk/exported")
+        }
+        afterEvaluate {
+            // If you wish to add a custom TurboModule or component locally,
+            // you should uncomment this line.
+            // preBuild.dependsOn("generateCodegenArtifactsFromSchema")
+            preDebugBuild.dependsOn(packageReactNdkDebugLibs)
+            preReleaseBuild.dependsOn(packageReactNdkReleaseLibs)
+
+            // Due to a bug inside AGP, we have to explicitly set a dependency
+            // between configureCMakeDebug* tasks and the preBuild tasks.
+            // This can be removed once this is solved: https://issuetracker.google.com/issues/207403732
+            configureCMakeRelWithDebInfo.dependsOn(preReleaseBuild)
+            configureCMakeDebug.dependsOn(preDebugBuild)
+            reactNativeArchitectures().each { architecture ->
+                tasks.findByName("configureCMakeDebug[${architecture}]")?.configure {
+                    dependsOn("preDebugBuild")
+                }
+                tasks.findByName("configureCMakeRelWithDebInfo[${architecture}]")?.configure {
+                    dependsOn("preReleaseBuild")
+                }
             }
+        }
+    }
+
     splits {
         abi {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
+            include (*reactNativeArchitectures())
         }
     }
     signingConfigs {
@@ -156,11 +221,6 @@ android {
     buildTypes {
         debug {
             signingConfig signingConfigs.debug
-            if (nativeArchitectures) {
-                ndk {
-                    abiFilters nativeArchitectures.split(',')
-                }
-            }
         }
         release {
             // Caution! In production, you need to generate your own keystore file.
@@ -190,6 +250,7 @@ android {
 
 dependencies {
     implementation fileTree(dir: "libs", include: ["*.jar"])
+
     //noinspection GradleDynamicVersion
     implementation "com.facebook.react:react-native:+"  // From node_modules
 
@@ -209,14 +270,31 @@ dependencies {
     }
 
     if (enableHermes) {
-        def hermesPath = "../../node_modules/hermes-engine/android/";
-        debugImplementation files(hermesPath + "hermes-debug.aar")
-        releaseImplementation files(hermesPath + "hermes-release.aar")
+        //noinspection GradleDynamicVersion
+        implementation("com.facebook.react:hermes-engine:+") { // From node_modules
+            exclude group:'com.facebook.fbjni'
+        }
     } else {
         implementation jscFlavor
     }
 }
 
+if (isNewArchitectureEnabled()) {
+    // If new architecture is enabled, we let you build RN from source
+    // Otherwise we fallback to a prebuilt .aar bundled in the NPM package.
+    // This will be applied to all the imported transtitive dependency.
+    configurations.all {
+        resolutionStrategy.dependencySubstitution {
+            substitute(module("com.facebook.react:react-native"))
+                    .using(project(":ReactAndroid"))
+                    .because("On New Architecture we're building React Native from source")
+            substitute(module("com.facebook.react:hermes-engine"))
+                    .using(project(":ReactAndroid:hermes-engine"))
+                    .because("On New Architecture we're building Hermes from source")
+        }
+    }
+}
+
 // Run this once to be able to run the application with BUCK
 // puts all compile dependencies into folder libs for BUCK to use
 task copyDownloadableDepsToLibs(type: Copy) {
@@ -225,3 +303,11 @@ task copyDownloadableDepsToLibs(type: Copy) {
 }
 
 apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
+
+def isNewArchitectureEnabled() {
+    // To opt-in for the New Architecture, you can either:
+    // - Set `newArchEnabled` to true inside the `gradle.properties` file
+    // - Invoke gradle with `-newArchEnabled=true`
+    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
+    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
+}
diff --git a/RnDiffApp/android/app/src/debug/AndroidManifest.xml b/RnDiffApp/android/app/src/debug/AndroidManifest.xml
index b2f3ad9fce..4b185bc159 100644
--- a/RnDiffApp/android/app/src/debug/AndroidManifest.xml
+++ b/RnDiffApp/android/app/src/debug/AndroidManifest.xml
@@ -8,6 +8,6 @@
         android:usesCleartextTraffic="true"
         tools:targetApi="28"
         tools:ignore="GoogleAppIndexingWarning">
-        <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
+        <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" android:exported="false" />
     </application>
 </manifest>
diff --git a/RnDiffApp/android/app/src/debug/java/com/rndiffapp/ReactNativeFlipper.java b/RnDiffApp/android/app/src/debug/java/com/rndiffapp/ReactNativeFlipper.java
index 5c106db4b3..b371cfd126 100644
--- a/RnDiffApp/android/app/src/debug/java/com/rndiffapp/ReactNativeFlipper.java
+++ b/RnDiffApp/android/app/src/debug/java/com/rndiffapp/ReactNativeFlipper.java
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * <p>This source code is licensed under the MIT license found in the LICENSE file in the root
  * directory of this source tree.
@@ -19,6 +19,7 @@ import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;
 import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;
 import com.facebook.flipper.plugins.react.ReactFlipperPlugin;
 import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;
+import com.facebook.react.ReactInstanceEventListener;
 import com.facebook.react.ReactInstanceManager;
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.modules.network.NetworkingModule;
@@ -51,7 +52,7 @@ public class ReactNativeFlipper {
       ReactContext reactContext = reactInstanceManager.getCurrentReactContext();
       if (reactContext == null) {
         reactInstanceManager.addReactInstanceEventListener(
-            new ReactInstanceManager.ReactInstanceEventListener() {
+            new ReactInstanceEventListener() {
               @Override
               public void onReactContextInitialized(ReactContext reactContext) {
                 reactInstanceManager.removeReactInstanceEventListener(this);
diff --git a/RnDiffApp/android/app/src/main/AndroidManifest.xml b/RnDiffApp/android/app/src/main/AndroidManifest.xml
index ad4899cc39..314a74198b 100644
--- a/RnDiffApp/android/app/src/main/AndroidManifest.xml
+++ b/RnDiffApp/android/app/src/main/AndroidManifest.xml
@@ -13,9 +13,10 @@
       <activity
         android:name=".MainActivity"
         android:label="@string/app_name"
-        android:configChanges="keyboard|keyboardHidden|orientation|screenSize|uiMode"
+        android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|uiMode"
         android:launchMode="singleTask"
-        android:windowSoftInputMode="adjustResize">
+        android:windowSoftInputMode="adjustResize"
+        android:exported="true">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainActivity.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainActivity.java
index e325e8cf9c..31ae98f7f6 100644
--- a/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainActivity.java
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainActivity.java
@@ -1,6 +1,8 @@
 package com.rndiffapp;
 
 import com.facebook.react.ReactActivity;
+import com.facebook.react.ReactActivityDelegate;
+import com.facebook.react.ReactRootView;
 
 public class MainActivity extends ReactActivity {
 
@@ -12,4 +14,35 @@ public class MainActivity extends ReactActivity {
   protected String getMainComponentName() {
     return "RnDiffApp";
   }
+
+  /**
+   * Returns the instance of the {@link ReactActivityDelegate}. There the RootView is created and
+   * you can specify the renderer you wish to use - the new renderer (Fabric) or the old renderer
+   * (Paper).
+   */
+  @Override
+  protected ReactActivityDelegate createReactActivityDelegate() {
+    return new MainActivityDelegate(this, getMainComponentName());
+  }
+
+  public static class MainActivityDelegate extends ReactActivityDelegate {
+    public MainActivityDelegate(ReactActivity activity, String mainComponentName) {
+      super(activity, mainComponentName);
+    }
+
+    @Override
+    protected ReactRootView createRootView() {
+      ReactRootView reactRootView = new ReactRootView(getContext());
+      // If you opted-in for the New Architecture, we enable the Fabric Renderer.
+      reactRootView.setIsFabric(BuildConfig.IS_NEW_ARCHITECTURE_ENABLED);
+      return reactRootView;
+    }
+
+    @Override
+    protected boolean isConcurrentRootEnabled() {
+      // If you opted-in for the New Architecture, we enable Concurrent Root (i.e. React 18).
+      // More on this on https://reactjs.org/blog/2022/03/29/react-v18.html
+      return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;
+    }
+  }
 }
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainApplication.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainApplication.java
index 04df56cf60..9f29592946 100644
--- a/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainApplication.java
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/MainApplication.java
@@ -7,7 +7,9 @@ import com.facebook.react.ReactApplication;
 import com.facebook.react.ReactInstanceManager;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
+import com.facebook.react.config.ReactFeatureFlags;
 import com.facebook.soloader.SoLoader;
+import com.rndiffapp.newarchitecture.MainApplicationReactNativeHost;
 import java.lang.reflect.InvocationTargetException;
 import java.util.List;
 
@@ -35,14 +37,23 @@ public class MainApplication extends Application implements ReactApplication {
         }
       };
 
+  private final ReactNativeHost mNewArchitectureNativeHost =
+      new MainApplicationReactNativeHost(this);
+
   @Override
   public ReactNativeHost getReactNativeHost() {
+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {
+      return mNewArchitectureNativeHost;
+    } else {
       return mReactNativeHost;
     }
+  }
 
   @Override
   public void onCreate() {
     super.onCreate();
+    // If you opted-in for the New Architecture, we enable the TurboModule system
+    ReactFeatureFlags.useTurboModules = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;
     SoLoader.init(this, /* native exopackage */ false);
     initializeFlipper(this, getReactNativeHost().getReactInstanceManager());
   }
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/MainApplicationReactNativeHost.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/MainApplicationReactNativeHost.java
new file mode 100644
index 0000000000..4f83022181
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/MainApplicationReactNativeHost.java
@@ -0,0 +1,116 @@
+package com.rndiffapp.newarchitecture;
+
+import android.app.Application;
+import androidx.annotation.NonNull;
+import com.facebook.react.PackageList;
+import com.facebook.react.ReactInstanceManager;
+import com.facebook.react.ReactNativeHost;
+import com.facebook.react.ReactPackage;
+import com.facebook.react.ReactPackageTurboModuleManagerDelegate;
+import com.facebook.react.bridge.JSIModulePackage;
+import com.facebook.react.bridge.JSIModuleProvider;
+import com.facebook.react.bridge.JSIModuleSpec;
+import com.facebook.react.bridge.JSIModuleType;
+import com.facebook.react.bridge.JavaScriptContextHolder;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.UIManager;
+import com.facebook.react.fabric.ComponentFactory;
+import com.facebook.react.fabric.CoreComponentsRegistry;
+import com.facebook.react.fabric.FabricJSIModuleProvider;
+import com.facebook.react.fabric.ReactNativeConfig;
+import com.facebook.react.uimanager.ViewManagerRegistry;
+import com.rndiffapp.BuildConfig;
+import com.rndiffapp.newarchitecture.components.MainComponentsRegistry;
+import com.rndiffapp.newarchitecture.modules.MainApplicationTurboModuleManagerDelegate;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * A {@link ReactNativeHost} that helps you load everything needed for the New Architecture, both
+ * TurboModule delegates and the Fabric Renderer.
+ *
+ * <p>Please note that this class is used ONLY if you opt-in for the New Architecture (see the
+ * `newArchEnabled` property). Is ignored otherwise.
+ */
+public class MainApplicationReactNativeHost extends ReactNativeHost {
+  public MainApplicationReactNativeHost(Application application) {
+    super(application);
+  }
+
+  @Override
+  public boolean getUseDeveloperSupport() {
+    return BuildConfig.DEBUG;
+  }
+
+  @Override
+  protected List<ReactPackage> getPackages() {
+    List<ReactPackage> packages = new PackageList(this).getPackages();
+    // Packages that cannot be autolinked yet can be added manually here, for example:
+    //     packages.add(new MyReactNativePackage());
+    // TurboModules must also be loaded here providing a valid TurboReactPackage implementation:
+    //     packages.add(new TurboReactPackage() { ... });
+    // If you have custom Fabric Components, their ViewManagers should also be loaded here
+    // inside a ReactPackage.
+    return packages;
+  }
+
+  @Override
+  protected String getJSMainModuleName() {
+    return "index";
+  }
+
+  @NonNull
+  @Override
+  protected ReactPackageTurboModuleManagerDelegate.Builder
+      getReactPackageTurboModuleManagerDelegateBuilder() {
+    // Here we provide the ReactPackageTurboModuleManagerDelegate Builder. This is necessary
+    // for the new architecture and to use TurboModules correctly.
+    return new MainApplicationTurboModuleManagerDelegate.Builder();
+  }
+
+  @Override
+  protected JSIModulePackage getJSIModulePackage() {
+    return new JSIModulePackage() {
+      @Override
+      public List<JSIModuleSpec> getJSIModules(
+          final ReactApplicationContext reactApplicationContext,
+          final JavaScriptContextHolder jsContext) {
+        final List<JSIModuleSpec> specs = new ArrayList<>();
+
+        // Here we provide a new JSIModuleSpec that will be responsible of providing the
+        // custom Fabric Components.
+        specs.add(
+            new JSIModuleSpec() {
+              @Override
+              public JSIModuleType getJSIModuleType() {
+                return JSIModuleType.UIManager;
+              }
+
+              @Override
+              public JSIModuleProvider<UIManager> getJSIModuleProvider() {
+                final ComponentFactory componentFactory = new ComponentFactory();
+                CoreComponentsRegistry.register(componentFactory);
+
+                // Here we register a Components Registry.
+                // The one that is generated with the template contains no components
+                // and just provides you the one from React Native core.
+                MainComponentsRegistry.register(componentFactory);
+
+                final ReactInstanceManager reactInstanceManager = getReactInstanceManager();
+
+                ViewManagerRegistry viewManagerRegistry =
+                    new ViewManagerRegistry(
+                        reactInstanceManager.getOrCreateViewManagers(reactApplicationContext));
+
+                return new FabricJSIModuleProvider(
+                    reactApplicationContext,
+                    componentFactory,
+                    ReactNativeConfig.DEFAULT_CONFIG,
+                    viewManagerRegistry);
+              }
+            });
+        return specs;
+      }
+    };
+  }
+}
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/components/MainComponentsRegistry.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/components/MainComponentsRegistry.java
new file mode 100644
index 0000000000..cdacb68edf
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/components/MainComponentsRegistry.java
@@ -0,0 +1,36 @@
+package com.rndiffapp.newarchitecture.components;
+
+import com.facebook.jni.HybridData;
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.fabric.ComponentFactory;
+import com.facebook.soloader.SoLoader;
+
+/**
+ * Class responsible to load the custom Fabric Components. This class has native methods and needs a
+ * corresponding C++ implementation/header file to work correctly (already placed inside the jni/
+ * folder for you).
+ *
+ * <p>Please note that this class is used ONLY if you opt-in for the New Architecture (see the
+ * `newArchEnabled` property). Is ignored otherwise.
+ */
+@DoNotStrip
+public class MainComponentsRegistry {
+  static {
+    SoLoader.loadLibrary("fabricjni");
+  }
+
+  @DoNotStrip private final HybridData mHybridData;
+
+  @DoNotStrip
+  private native HybridData initHybrid(ComponentFactory componentFactory);
+
+  @DoNotStrip
+  private MainComponentsRegistry(ComponentFactory componentFactory) {
+    mHybridData = initHybrid(componentFactory);
+  }
+
+  @DoNotStrip
+  public static MainComponentsRegistry register(ComponentFactory componentFactory) {
+    return new MainComponentsRegistry(componentFactory);
+  }
+}
diff --git a/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/modules/MainApplicationTurboModuleManagerDelegate.java b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/modules/MainApplicationTurboModuleManagerDelegate.java
new file mode 100644
index 0000000000..10275588e4
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/java/com/rndiffapp/newarchitecture/modules/MainApplicationTurboModuleManagerDelegate.java
@@ -0,0 +1,48 @@
+package com.rndiffapp.newarchitecture.modules;
+
+import com.facebook.jni.HybridData;
+import com.facebook.react.ReactPackage;
+import com.facebook.react.ReactPackageTurboModuleManagerDelegate;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.soloader.SoLoader;
+import java.util.List;
+
+/**
+ * Class responsible to load the TurboModules. This class has native methods and needs a
+ * corresponding C++ implementation/header file to work correctly (already placed inside the jni/
+ * folder for you).
+ *
+ * <p>Please note that this class is used ONLY if you opt-in for the New Architecture (see the
+ * `newArchEnabled` property). Is ignored otherwise.
+ */
+public class MainApplicationTurboModuleManagerDelegate
+    extends ReactPackageTurboModuleManagerDelegate {
+
+  private static volatile boolean sIsSoLibraryLoaded;
+
+  protected MainApplicationTurboModuleManagerDelegate(
+      ReactApplicationContext reactApplicationContext, List<ReactPackage> packages) {
+    super(reactApplicationContext, packages);
+  }
+
+  protected native HybridData initHybrid();
+
+  native boolean canCreateTurboModule(String moduleName);
+
+  public static class Builder extends ReactPackageTurboModuleManagerDelegate.Builder {
+    protected MainApplicationTurboModuleManagerDelegate build(
+        ReactApplicationContext context, List<ReactPackage> packages) {
+      return new MainApplicationTurboModuleManagerDelegate(context, packages);
+    }
+  }
+
+  @Override
+  protected synchronized void maybeLoadOtherSoLibraries() {
+    if (!sIsSoLibraryLoaded) {
+      // If you change the name of your application .so file in the Android.mk file,
+      // make sure you update the name here as well.
+      SoLoader.loadLibrary("rndiffapp_appmodules");
+      sIsSoLibraryLoaded = true;
+    }
+  }
+}
diff --git a/RnDiffApp/android/app/src/main/jni/CMakeLists.txt b/RnDiffApp/android/app/src/main/jni/CMakeLists.txt
new file mode 100644
index 0000000000..6e63f482b8
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/CMakeLists.txt
@@ -0,0 +1,7 @@
+cmake_minimum_required(VERSION 3.13)
+
+# Define the library name here.
+project(rndiffapp_appmodules)
+
+# This file includes all the necessary to let you build your application with the New Architecture.
+include(${REACT_ANDROID_DIR}/cmake-utils/ReactNative-application.cmake)
diff --git a/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.cpp b/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.cpp
new file mode 100644
index 0000000000..26162dd872
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.cpp
@@ -0,0 +1,32 @@
+#include "MainApplicationModuleProvider.h"
+
+#include <rncli.h>
+#include <rncore.h>
+
+namespace facebook {
+namespace react {
+
+std::shared_ptr<TurboModule> MainApplicationModuleProvider(
+    const std::string &moduleName,
+    const JavaTurboModule::InitParams &params) {
+  // Here you can provide your own module provider for TurboModules coming from
+  // either your application or from external libraries. The approach to follow
+  // is similar to the following (for a library called `samplelibrary`:
+  //
+  // auto module = samplelibrary_ModuleProvider(moduleName, params);
+  // if (module != nullptr) {
+  //    return module;
+  // }
+  // return rncore_ModuleProvider(moduleName, params);
+
+  // Module providers autolinked by RN CLI
+  auto rncli_module = rncli_ModuleProvider(moduleName, params);
+  if (rncli_module != nullptr) {
+    return rncli_module;
+  }
+
+  return rncore_ModuleProvider(moduleName, params);
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.h b/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.h
new file mode 100644
index 0000000000..b38ccf53fd
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainApplicationModuleProvider.h
@@ -0,0 +1,16 @@
+#pragma once
+
+#include <memory>
+#include <string>
+
+#include <ReactCommon/JavaTurboModule.h>
+
+namespace facebook {
+namespace react {
+
+std::shared_ptr<TurboModule> MainApplicationModuleProvider(
+    const std::string &moduleName,
+    const JavaTurboModule::InitParams &params);
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.cpp b/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.cpp
new file mode 100644
index 0000000000..5fd688c509
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.cpp
@@ -0,0 +1,45 @@
+#include "MainApplicationTurboModuleManagerDelegate.h"
+#include "MainApplicationModuleProvider.h"
+
+namespace facebook {
+namespace react {
+
+jni::local_ref<MainApplicationTurboModuleManagerDelegate::jhybriddata>
+MainApplicationTurboModuleManagerDelegate::initHybrid(
+    jni::alias_ref<jhybridobject>) {
+  return makeCxxInstance();
+}
+
+void MainApplicationTurboModuleManagerDelegate::registerNatives() {
+  registerHybrid({
+      makeNativeMethod(
+          "initHybrid", MainApplicationTurboModuleManagerDelegate::initHybrid),
+      makeNativeMethod(
+          "canCreateTurboModule",
+          MainApplicationTurboModuleManagerDelegate::canCreateTurboModule),
+  });
+}
+
+std::shared_ptr<TurboModule>
+MainApplicationTurboModuleManagerDelegate::getTurboModule(
+    const std::string &name,
+    const std::shared_ptr<CallInvoker> &jsInvoker) {
+  // Not implemented yet: provide pure-C++ NativeModules here.
+  return nullptr;
+}
+
+std::shared_ptr<TurboModule>
+MainApplicationTurboModuleManagerDelegate::getTurboModule(
+    const std::string &name,
+    const JavaTurboModule::InitParams &params) {
+  return MainApplicationModuleProvider(name, params);
+}
+
+bool MainApplicationTurboModuleManagerDelegate::canCreateTurboModule(
+    const std::string &name) {
+  return getTurboModule(name, nullptr) != nullptr ||
+      getTurboModule(name, {.moduleName = name}) != nullptr;
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.h b/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.h
new file mode 100644
index 0000000000..58ced33388
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.h
@@ -0,0 +1,38 @@
+#include <memory>
+#include <string>
+
+#include <ReactCommon/TurboModuleManagerDelegate.h>
+#include <fbjni/fbjni.h>
+
+namespace facebook {
+namespace react {
+
+class MainApplicationTurboModuleManagerDelegate
+    : public jni::HybridClass<
+          MainApplicationTurboModuleManagerDelegate,
+          TurboModuleManagerDelegate> {
+ public:
+  // Adapt it to the package you used for your Java class.
+  static constexpr auto kJavaDescriptor =
+      "Lcom/rndiffapp/newarchitecture/modules/MainApplicationTurboModuleManagerDelegate;";
+
+  static jni::local_ref<jhybriddata> initHybrid(jni::alias_ref<jhybridobject>);
+
+  static void registerNatives();
+
+  std::shared_ptr<TurboModule> getTurboModule(
+      const std::string &name,
+      const std::shared_ptr<CallInvoker> &jsInvoker) override;
+  std::shared_ptr<TurboModule> getTurboModule(
+      const std::string &name,
+      const JavaTurboModule::InitParams &params) override;
+
+  /**
+   * Test-only method. Allows user to verify whether a TurboModule can be
+   * created by instances of this class.
+   */
+  bool canCreateTurboModule(const std::string &name);
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.cpp b/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.cpp
new file mode 100644
index 0000000000..54f598a486
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.cpp
@@ -0,0 +1,65 @@
+#include "MainComponentsRegistry.h"
+
+#include <CoreComponentsRegistry.h>
+#include <fbjni/fbjni.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+#include <react/renderer/components/rncore/ComponentDescriptors.h>
+#include <rncli.h>
+
+namespace facebook {
+namespace react {
+
+MainComponentsRegistry::MainComponentsRegistry(ComponentFactory *delegate) {}
+
+std::shared_ptr<ComponentDescriptorProviderRegistry const>
+MainComponentsRegistry::sharedProviderRegistry() {
+  auto providerRegistry = CoreComponentsRegistry::sharedProviderRegistry();
+
+  // Autolinked providers registered by RN CLI
+  rncli_registerProviders(providerRegistry);
+
+  // Custom Fabric Components go here. You can register custom
+  // components coming from your App or from 3rd party libraries here.
+  //
+  // providerRegistry->add(concreteComponentDescriptorProvider<
+  //        AocViewerComponentDescriptor>());
+  return providerRegistry;
+}
+
+jni::local_ref<MainComponentsRegistry::jhybriddata>
+MainComponentsRegistry::initHybrid(
+    jni::alias_ref<jclass>,
+    ComponentFactory *delegate) {
+  auto instance = makeCxxInstance(delegate);
+
+  auto buildRegistryFunction =
+      [](EventDispatcher::Weak const &eventDispatcher,
+         ContextContainer::Shared const &contextContainer)
+      -> ComponentDescriptorRegistry::Shared {
+    auto registry = MainComponentsRegistry::sharedProviderRegistry()
+                        ->createComponentDescriptorRegistry(
+                            {eventDispatcher, contextContainer});
+
+    auto mutableRegistry =
+        std::const_pointer_cast<ComponentDescriptorRegistry>(registry);
+
+    mutableRegistry->setFallbackComponentDescriptor(
+        std::make_shared<UnimplementedNativeViewComponentDescriptor>(
+            ComponentDescriptorParameters{
+                eventDispatcher, contextContainer, nullptr}));
+
+    return registry;
+  };
+
+  delegate->buildRegistryFunction = buildRegistryFunction;
+  return instance;
+}
+
+void MainComponentsRegistry::registerNatives() {
+  registerHybrid({
+      makeNativeMethod("initHybrid", MainComponentsRegistry::initHybrid),
+  });
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.h b/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.h
new file mode 100644
index 0000000000..04e3d5786f
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/MainComponentsRegistry.h
@@ -0,0 +1,32 @@
+#pragma once
+
+#include <ComponentFactory.h>
+#include <fbjni/fbjni.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+#include <react/renderer/componentregistry/ComponentDescriptorRegistry.h>
+
+namespace facebook {
+namespace react {
+
+class MainComponentsRegistry
+    : public facebook::jni::HybridClass<MainComponentsRegistry> {
+ public:
+  // Adapt it to the package you used for your Java class.
+  constexpr static auto kJavaDescriptor =
+      "Lcom/rndiffapp/newarchitecture/components/MainComponentsRegistry;";
+
+  static void registerNatives();
+
+  MainComponentsRegistry(ComponentFactory *delegate);
+
+ private:
+  static std::shared_ptr<ComponentDescriptorProviderRegistry const>
+  sharedProviderRegistry();
+
+  static jni::local_ref<jhybriddata> initHybrid(
+      jni::alias_ref<jclass>,
+      ComponentFactory *delegate);
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/RnDiffApp/android/app/src/main/jni/OnLoad.cpp b/RnDiffApp/android/app/src/main/jni/OnLoad.cpp
new file mode 100644
index 0000000000..c569b6e865
--- /dev/null
+++ b/RnDiffApp/android/app/src/main/jni/OnLoad.cpp
@@ -0,0 +1,11 @@
+#include <fbjni/fbjni.h>
+#include "MainApplicationTurboModuleManagerDelegate.h"
+#include "MainComponentsRegistry.h"
+
+JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *) {
+  return facebook::jni::initialize(vm, [] {
+    facebook::react::MainApplicationTurboModuleManagerDelegate::
+        registerNatives();
+    facebook::react::MainComponentsRegistry::registerNatives();
+  });
+}
diff --git a/RnDiffApp/android/build.gradle b/RnDiffApp/android/build.gradle
index 3be1031fb2..8569fee3a7 100644
--- a/RnDiffApp/android/build.gradle
+++ b/RnDiffApp/android/build.gradle
@@ -2,18 +2,27 @@
 
 buildscript {
     ext {
-        buildToolsVersion = "30.0.2"
+        buildToolsVersion = "31.0.0"
         minSdkVersion = 21
-        compileSdkVersion = 30
-        targetSdkVersion = 30
+        compileSdkVersion = 31
+        targetSdkVersion = 31
+
+        if (System.properties['os.arch'] == "aarch64") {
+            // For M1 Users we need to use the NDK 24 which added support for aarch64
+            ndkVersion = "24.0.8215888"
+        } else {
+            // Otherwise we default to the side-by-side NDK version from AGP.
             ndkVersion = "21.4.7075529"
         }
+    }
     repositories {
         google()
         mavenCentral()
     }
     dependencies {
-        classpath("com.android.tools.build:gradle:4.2.2")
+        classpath("com.android.tools.build:gradle:7.2.1")
+        classpath("com.facebook.react:react-native-gradle-plugin")
+        classpath("de.undercouch:gradle-download-task:5.0.1")
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
     }
diff --git a/RnDiffApp/android/gradle.properties b/RnDiffApp/android/gradle.properties
index 11d6e02418..fa4feae5f1 100644
--- a/RnDiffApp/android/gradle.properties
+++ b/RnDiffApp/android/gradle.properties
@@ -9,8 +9,8 @@
 
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
-# Default value: -Xmx1024m -XX:MaxPermSize=256m
-# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+# Default value: -Xmx512m -XX:MaxMetaspaceSize=256m
+org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m
 
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. More details, visit
@@ -25,4 +25,16 @@ android.useAndroidX=true
 android.enableJetifier=true
 
 # Version of flipper SDK to use with React Native
-FLIPPER_VERSION=0.99.0
+FLIPPER_VERSION=0.125.0
+
+# Use this property to specify which architecture you want to build.
+# You can also override it from the CLI using
+# ./gradlew <task> -PreactNativeArchitectures=x86_64
+reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64
+
+# Use this property to enable support to the new architecture.
+# This will allow you to use TurboModules and the Fabric render in
+# your application. You should enable this flag either if you want
+# to write custom TurboModules/Fabric components OR use libraries that
+# are providing them.
+newArchEnabled=false
diff --git a/RnDiffApp/android/gradle/wrapper/gradle-wrapper.jar b/RnDiffApp/android/gradle/wrapper/gradle-wrapper.jar
index e708b1c023ec8b20f512888fe07c5bd3ff77bb8f..41d9927a4d4fb3f96a785543079b8df6723c946b 100644
GIT binary patch
delta 20926
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

delta 20096
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

diff --git a/RnDiffApp/android/gradle/wrapper/gradle-wrapper.properties b/RnDiffApp/android/gradle/wrapper/gradle-wrapper.properties
index a0f7639f7d..8fad3f5a98 100644
--- a/RnDiffApp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/RnDiffApp/android/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-7.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-7.5.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/RnDiffApp/android/gradlew b/RnDiffApp/android/gradlew
index 4f906e0c81..1b6c787337 100755
--- a/RnDiffApp/android/gradlew
+++ b/RnDiffApp/android/gradlew
@@ -1,7 +1,7 @@
-#!/usr/bin/env sh
+#!/bin/sh
 
 #
-# Copyright 2015 the original author or authors.
+# Copyright © 2015-2021 the original authors.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
@@ -17,67 +17,101 @@
 #
 
 ##############################################################################
-##
-##  Gradle start up script for UN*X
-##
+#
+#   Gradle start up script for POSIX generated by Gradle.
+#
+#   Important for running:
+#
+#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
+#       noncompliant, but you have some other compliant shell such as ksh or
+#       bash, then to run this script, type that shell name before the whole
+#       command line, like:
+#
+#           ksh Gradle
+#
+#       Busybox and similar reduced shells will NOT work, because this script
+#       requires all of these POSIX shell features:
+#         * functions;
+#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
+#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
+#         * compound commands having a testable exit status, especially «case»;
+#         * various built-in commands including «command», «set», and «ulimit».
+#
+#   Important for patching:
+#
+#   (2) This script targets any POSIX shell, so it avoids extensions provided
+#       by Bash, Ksh, etc; in particular arrays are avoided.
+#
+#       The "traditional" practice of packing multiple parameters into a
+#       space-separated string is a well documented source of bugs and security
+#       problems, so this is (mostly) avoided, by progressively accumulating
+#       options in "$@", and eventually passing that to Java.
+#
+#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
+#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;
+#       see the in-line comments for details.
+#
+#       There are tweaks for specific operating systems such as AIX, CygWin,
+#       Darwin, MinGW, and NonStop.
+#
+#   (3) This script is generated from the Groovy template
+#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
+#       within the Gradle project.
+#
+#       You can find Gradle at https://github.com/gradle/gradle/.
+#
 ##############################################################################
 
 # Attempt to set APP_HOME
+
 # Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
+app_path=$0
+
+# Need this for daisy-chained symlinks.
+while
+    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
+    [ -h "$app_path" ]
+do
+    ls=$( ls -ld "$app_path" )
+    link=${ls#*' -> '}
+    case $link in             #(
+      /*)   app_path=$link ;; #(
+      *)    app_path=$APP_HOME$link ;;
+    esac
 done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >/dev/null
-APP_HOME="`pwd -P`"
-cd "$SAVED" >/dev/null
+
+APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit
 
 APP_NAME="Gradle"
-APP_BASE_NAME=`basename "$0"`
+APP_BASE_NAME=${0##*/}
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
 DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
-MAX_FD="maximum"
+MAX_FD=maximum
 
 warn () {
     echo "$*"
-}
+} >&2
 
 die () {
     echo
     echo "$*"
     echo
     exit 1
-}
+} >&2
 
 # OS specific support (must be 'true' or 'false').
 cygwin=false
 msys=false
 darwin=false
 nonstop=false
-case "`uname`" in
-  CYGWIN* )
-    cygwin=true
-    ;;
-  Darwin* )
-    darwin=true
-    ;;
-  MINGW* )
-    msys=true
-    ;;
-  NONSTOP* )
-    nonstop=true
-    ;;
+case "$( uname )" in                #(
+  CYGWIN* )         cygwin=true  ;; #(
+  Darwin* )         darwin=true  ;; #(
+  MSYS* | MINGW* )  msys=true    ;; #(
+  NONSTOP* )        nonstop=true ;;
 esac
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
@@ -87,9 +121,9 @@ CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 if [ -n "$JAVA_HOME" ] ; then
     if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
         # IBM's JDK on AIX uses strange locations for the executables
-        JAVACMD="$JAVA_HOME/jre/sh/java"
+        JAVACMD=$JAVA_HOME/jre/sh/java
     else
-        JAVACMD="$JAVA_HOME/bin/java"
+        JAVACMD=$JAVA_HOME/bin/java
     fi
     if [ ! -x "$JAVACMD" ] ; then
         die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
@@ -98,7 +132,7 @@ Please set the JAVA_HOME variable in your environment to match the
 location of your Java installation."
     fi
 else
-    JAVACMD="java"
+    JAVACMD=java
     which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
 
 Please set the JAVA_HOME variable in your environment to match the
@@ -106,80 +140,95 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
-    MAX_FD_LIMIT=`ulimit -H -n`
-    if [ $? -eq 0 ] ; then
-        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
-            MAX_FD="$MAX_FD_LIMIT"
-        fi
-        ulimit -n $MAX_FD
-        if [ $? -ne 0 ] ; then
-            warn "Could not set maximum file descriptor limit: $MAX_FD"
-        fi
-    else
-        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
-    fi
+if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
+    case $MAX_FD in #(
+      max*)
+        MAX_FD=$( ulimit -H -n ) ||
+            warn "Could not query maximum file descriptor limit"
+    esac
+    case $MAX_FD in  #(
+      '' | soft) :;; #(
+      *)
+        ulimit -n "$MAX_FD" ||
+            warn "Could not set maximum file descriptor limit to $MAX_FD"
+    esac
 fi
 
-# For Darwin, add options to specify how the application appears in the dock
-if $darwin; then
-    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
-fi
+# Collect all arguments for the java command, stacking in reverse order:
+#   * args from the command line
+#   * the main class name
+#   * -classpath
+#   * -D...appname settings
+#   * --module-path (only if needed)
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.
 
 # For Cygwin or MSYS, switch paths to Windows format before running java
-if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
-    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
-    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
-
-    JAVACMD=`cygpath --unix "$JAVACMD"`
-
-    # We build the pattern for arguments to be converted via cygpath
-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
-    SEP=""
-    for dir in $ROOTDIRSRAW ; do
-        ROOTDIRS="$ROOTDIRS$SEP$dir"
-        SEP="|"
-    done
-    OURCYGPATTERN="(^($ROOTDIRS))"
-    # Add a user-defined pattern to the cygpath arguments
-    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
-        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
-    fi
-    # Now convert the arguments - kludge to limit ourselves to /bin/sh
-    i=0
-    for arg in "$@" ; do
-        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
-        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+if "$cygwin" || "$msys" ; then
+    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
+    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )
 
-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
-            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
-        else
-            eval `echo args$i`="\"$arg\""
+    JAVACMD=$( cygpath --unix "$JAVACMD" )
+
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    for arg do
+        if
+            case $arg in                                #(
+              -*)   false ;;                            # don't mess with options #(
+              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
+                    [ -e "$t" ] ;;                      #(
+              *)    false ;;
+            esac
+        then
+            arg=$( cygpath --path --ignore --mixed "$arg" )
         fi
-        i=`expr $i + 1`
+        # Roll the args list around exactly as many times as the number of
+        # args, so each arg winds up back in the position where it started, but
+        # possibly modified.
+        #
+        # NB: a `for` loop captures its iteration list before it begins, so
+        # changing the positional parameters here affects neither the number of
+        # iterations, nor the values presented in `arg`.
+        shift                   # remove old arg
+        set -- "$@" "$arg"      # push replacement arg
     done
-    case $i in
-        0) set -- ;;
-        1) set -- "$args0" ;;
-        2) set -- "$args0" "$args1" ;;
-        3) set -- "$args0" "$args1" "$args2" ;;
-        4) set -- "$args0" "$args1" "$args2" "$args3" ;;
-        5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
-        6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
-        7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
-        8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
-        9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
-    esac
 fi
 
-# Escape application args
-save () {
-    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
-    echo " "
-}
-APP_ARGS=`save "$@"`
+# Collect all arguments for the java command;
+#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of
+#     shell script including quotes and variable substitutions, so put them in
+#     double quotes to make sure that they get re-expanded; and
+#   * put everything else in single quotes, so that it's not re-expanded.
+
+set -- \
+        "-Dorg.gradle.appname=$APP_BASE_NAME" \
+        -classpath "$CLASSPATH" \
+        org.gradle.wrapper.GradleWrapperMain \
+        "$@"
+
+# Use "xargs" to parse quoted args.
+#
+# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
+#
+# In Bash we could simply go:
+#
+#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
+#   set -- "${ARGS[@]}" "$@"
+#
+# but POSIX shell has neither arrays nor command substitution, so instead we
+# post-process each arg (as a line of input to sed) to backslash-escape any
+# character that might be a shell metacharacter, then use eval to reverse
+# that process (while maintaining the separation between arguments), and wrap
+# the whole thing up as a single "set" statement.
+#
+# This will of course break if any of these variables contains a newline or
+# an unmatched quote.
+#
 
-# Collect all arguments for the java command, following the shell quoting and substitution rules
-eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+eval "set -- $(
+        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS" |
+        xargs -n1 |
+        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
+        tr '\n' ' '
+    )" '"$@"'
 
 exec "$JAVACMD" "$@"
diff --git a/RnDiffApp/android/settings.gradle b/RnDiffApp/android/settings.gradle
index 73a47b2eda..2c19646a3f 100644
--- a/RnDiffApp/android/settings.gradle
+++ b/RnDiffApp/android/settings.gradle
@@ -1,3 +1,11 @@
 rootProject.name = 'RnDiffApp'
 apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
 include ':app'
+includeBuild('../node_modules/react-native-gradle-plugin')
+
+if (settings.hasProperty("newArchEnabled") && settings.newArchEnabled == "true") {
+    include(":ReactAndroid")
+    project(":ReactAndroid").projectDir = file('../node_modules/react-native/ReactAndroid')
+    include(":ReactAndroid:hermes-engine")
+    project(":ReactAndroid:hermes-engine").projectDir = file('../node_modules/react-native/ReactAndroid/hermes-engine')
+}
diff --git a/RnDiffApp/ios/.xcode.env b/RnDiffApp/ios/.xcode.env
new file mode 100644
index 0000000000..3d5782c715
--- /dev/null
+++ b/RnDiffApp/ios/.xcode.env
@@ -0,0 +1,11 @@
+# This `.xcode.env` file is versioned and is used to source the environment
+# used when running script phases inside Xcode.
+# To customize your local environment, you can create an `.xcode.env.local`
+# file that is not versioned.
+
+# NODE_BINARY variable contains the PATH to the node executable.
+#
+# Customize the NODE_BINARY variable here.
+# For example, to use nvm with brew, add the following line
+# . "$(brew --prefix nvm)/nvm.sh" --no-use
+export NODE_BINARY=$(command -v node)
diff --git a/RnDiffApp/ios/Podfile b/RnDiffApp/ios/Podfile
index 30a745089b..392f80c6ef 100644
--- a/RnDiffApp/ios/Podfile
+++ b/RnDiffApp/ios/Podfile
@@ -1,15 +1,29 @@
 require_relative '../node_modules/react-native/scripts/react_native_pods'
 require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
 
-platform :ios, '11.0'
+platform :ios, '12.4'
+install! 'cocoapods', :deterministic_uuids => false
 
 target 'RnDiffApp' do
   config = use_native_modules!
 
+  # Flags change depending on the env values.
+  flags = get_default_flags()
+
   use_react_native!(
     :path => config[:reactNativePath],
-    # to enable hermes on iOS, change `false` to `true` and then install pods
-    :hermes_enabled => false
+    # Hermes is now enabled by default. Disable by setting this flag to false.
+    # Upcoming versions of React Native may rely on get_default_flags(), but
+    # we make it explicit here to aid in the React Native upgrade process.
+    :hermes_enabled => true,
+    :fabric_enabled => flags[:fabric_enabled],
+    # Enables Flipper.
+    #
+    # Note that if you have use_frameworks! enabled, Flipper will not work and
+    # you should disable the next line.
+    :flipper_configuration => FlipperConfiguration.enabled,
+    # An absolute path to your application root.
+    :app_path => "#{Pod::Config.instance.installation_root}/.."
   )
 
   target 'RnDiffAppTests' do
@@ -17,13 +31,13 @@ target 'RnDiffApp' do
     # Pods for testing
   end
 
-  # Enables Flipper.
-  #
-  # Note that if you have use_frameworks! enabled, Flipper will not work and
-  # you should disable the next line.
-  use_flipper!()
-
   post_install do |installer|
-    react_native_post_install(installer)
+    react_native_post_install(
+      installer,
+      # Set `mac_catalyst_enabled` to `true` in order to apply patches
+      # necessary for Mac Catalyst builds
+      :mac_catalyst_enabled => false
+    )
+    __apply_Xcode_12_5_M1_post_install_workaround(installer)
   end
 end
diff --git a/RnDiffApp/ios/RnDiffApp.xcodeproj/project.pbxproj b/RnDiffApp/ios/RnDiffApp.xcodeproj/project.pbxproj
index 7fb9d2c4e8..ce9114fecc 100644
--- a/RnDiffApp/ios/RnDiffApp.xcodeproj/project.pbxproj
+++ b/RnDiffApp/ios/RnDiffApp.xcodeproj/project.pbxproj
@@ -8,12 +8,12 @@
 
 /* Begin PBXBuildFile section */
 		00E356F31AD99517003FC87E /* RnDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* RnDiffAppTests.m */; };
-		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
+		0C80B921A6F3F58F76C31292 /* libPods-RnDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5DCACB8F33CDC322A6C60F78 /* libPods-RnDiffApp.a */; };
+		13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		7F284E7B90DC5857C2E2E8EC /* libPods-RnDiffApp-RnDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BF36029DA46F4896313C0613 /* libPods-RnDiffApp-RnDiffAppTests.a */; };
+		7699B88040F8A987B510C191 /* libPods-RnDiffApp-RnDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 19F6CBCC0A4E27FBF8BF4A61 /* libPods-RnDiffApp-RnDiffAppTests.a */; };
 		81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
-		C00133725553115E97172453 /* libPods-RnDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 83E77B4FCDC5D9801A5D4FB8 /* libPods-RnDiffApp.a */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -32,17 +32,17 @@
 		00E356F21AD99517003FC87E /* RnDiffAppTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = RnDiffAppTests.m; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* RnDiffApp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = RnDiffApp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = RnDiffApp/AppDelegate.h; sourceTree = "<group>"; };
-		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = RnDiffApp/AppDelegate.m; sourceTree = "<group>"; };
+		13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = RnDiffApp/AppDelegate.mm; sourceTree = "<group>"; };
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = RnDiffApp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = RnDiffApp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = RnDiffApp/main.m; sourceTree = "<group>"; };
-		2457FA33456EA0041329431D /* Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
-		500F6CC1B2407B54BD3F225D /* Pods-RnDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-RnDiffApp.release.xcconfig"; path = "Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp.release.xcconfig"; sourceTree = "<group>"; };
-		5B9B8B20698287CBFD534068 /* Pods-RnDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-RnDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
+		19F6CBCC0A4E27FBF8BF4A61 /* libPods-RnDiffApp-RnDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-RnDiffApp-RnDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		3B4392A12AC88292D35C810B /* Pods-RnDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-RnDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
+		5709B34CF0A7D63546082F79 /* Pods-RnDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-RnDiffApp.release.xcconfig"; path = "Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp.release.xcconfig"; sourceTree = "<group>"; };
+		5B7EB9410499542E8C5724F5 /* Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
+		5DCACB8F33CDC322A6C60F78 /* libPods-RnDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-RnDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = LaunchScreen.storyboard; path = RnDiffApp/LaunchScreen.storyboard; sourceTree = "<group>"; };
-		83E77B4FCDC5D9801A5D4FB8 /* libPods-RnDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-RnDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		988EA9E2867120FEFD0C8D84 /* Pods-RnDiffApp-RnDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-RnDiffApp-RnDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
-		BF36029DA46F4896313C0613 /* libPods-RnDiffApp-RnDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-RnDiffApp-RnDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		89C6BE57DB24E9ADA2F236DE /* Pods-RnDiffApp-RnDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-RnDiffApp-RnDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
 		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
 /* End PBXFileReference section */
 
@@ -51,7 +51,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				7F284E7B90DC5857C2E2E8EC /* libPods-RnDiffApp-RnDiffAppTests.a in Frameworks */,
+				7699B88040F8A987B510C191 /* libPods-RnDiffApp-RnDiffAppTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -59,7 +59,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				C00133725553115E97172453 /* libPods-RnDiffApp.a in Frameworks */,
+				0C80B921A6F3F58F76C31292 /* libPods-RnDiffApp.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -87,7 +87,7 @@
 			isa = PBXGroup;
 			children = (
 				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
-				13B07FB01A68108700A75B9A /* AppDelegate.m */,
+				13B07FB01A68108700A75B9A /* AppDelegate.mm */,
 				13B07FB51A68108700A75B9A /* Images.xcassets */,
 				13B07FB61A68108700A75B9A /* Info.plist */,
 				81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */,
@@ -100,8 +100,8 @@
 			isa = PBXGroup;
 			children = (
 				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
-				83E77B4FCDC5D9801A5D4FB8 /* libPods-RnDiffApp.a */,
-				BF36029DA46F4896313C0613 /* libPods-RnDiffApp-RnDiffAppTests.a */,
+				5DCACB8F33CDC322A6C60F78 /* libPods-RnDiffApp.a */,
+				19F6CBCC0A4E27FBF8BF4A61 /* libPods-RnDiffApp-RnDiffAppTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
@@ -121,7 +121,7 @@
 				00E356EF1AD99517003FC87E /* RnDiffAppTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				9EF5E1276C6DC7008930C695 /* Pods */,
+				BBD78D7AC51CEA395F1C20DB /* Pods */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -137,15 +137,14 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		9EF5E1276C6DC7008930C695 /* Pods */ = {
+		BBD78D7AC51CEA395F1C20DB /* Pods */ = {
 			isa = PBXGroup;
 			children = (
-				5B9B8B20698287CBFD534068 /* Pods-RnDiffApp.debug.xcconfig */,
-				500F6CC1B2407B54BD3F225D /* Pods-RnDiffApp.release.xcconfig */,
-				2457FA33456EA0041329431D /* Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig */,
-				988EA9E2867120FEFD0C8D84 /* Pods-RnDiffApp-RnDiffAppTests.release.xcconfig */,
+				3B4392A12AC88292D35C810B /* Pods-RnDiffApp.debug.xcconfig */,
+				5709B34CF0A7D63546082F79 /* Pods-RnDiffApp.release.xcconfig */,
+				5B7EB9410499542E8C5724F5 /* Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig */,
+				89C6BE57DB24E9ADA2F236DE /* Pods-RnDiffApp-RnDiffAppTests.release.xcconfig */,
 			);
-			name = Pods;
 			path = Pods;
 			sourceTree = "<group>";
 		};
@@ -156,12 +155,12 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "RnDiffAppTests" */;
 			buildPhases = (
-				06A1C396AF1E66133324D2F0 /* [CP] Check Pods Manifest.lock */,
+				A55EABD7B0C7F3A422A6CC61 /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
-				DD9ABB1B92158F14184E2DED /* [CP] Embed Pods Frameworks */,
-				96501DEF5205415DD9E27AFD /* [CP] Copy Pods Resources */,
+				C59DA0FBD6956966B86A3779 /* [CP] Embed Pods Frameworks */,
+				F6A41C54EA430FDDC6A6ED99 /* [CP] Copy Pods Resources */,
 			);
 			buildRules = (
 			);
@@ -177,14 +176,14 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "RnDiffApp" */;
 			buildPhases = (
-				C0CDF3ED8FCF46206B40ED3E /* [CP] Check Pods Manifest.lock */,
+				C38B50BA6285516D6DCD4F65 /* [CP] Check Pods Manifest.lock */,
 				FD10A7F022414F080027D42C /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
-				A6117BDA8DCFDEEE82A5CABA /* [CP] Embed Pods Frameworks */,
-				A7FBA572FE4CD132416F70F6 /* [CP] Copy Pods Resources */,
+				00EEFC60759A1932668264C0 /* [CP] Embed Pods Frameworks */,
+				E235C05ADACE081382539298 /* [CP] Copy Pods Resources */,
 			);
 			buildRules = (
 			);
@@ -257,15 +256,34 @@
 			files = (
 			);
 			inputPaths = (
+				"$(SRCROOT)/.xcode.env.local",
+				"$(SRCROOT)/.xcode.env",
 			);
 			name = "Bundle React Native code and images";
 			outputPaths = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "set -e\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
+			shellScript = "set -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
 		};
-		06A1C396AF1E66133324D2F0 /* [CP] Check Pods Manifest.lock */ = {
+		00EEFC60759A1932668264C0 /* [CP] Embed Pods Frameworks */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-frameworks-${CONFIGURATION}-input-files.xcfilelist",
+			);
+			name = "[CP] Embed Pods Frameworks";
+			outputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-frameworks-${CONFIGURATION}-output-files.xcfilelist",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-frameworks.sh\"\n";
+			showEnvVarsInLog = 0;
+		};
+		A55EABD7B0C7F3A422A6CC61 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -287,41 +305,46 @@
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		96501DEF5205415DD9E27AFD /* [CP] Copy Pods Resources */ = {
+		C38B50BA6285516D6DCD4F65 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-resources-${CONFIGURATION}-input-files.xcfilelist",
 			);
-			name = "[CP] Copy Pods Resources";
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
 			outputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-resources-${CONFIGURATION}-output-files.xcfilelist",
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-RnDiffApp-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-resources.sh\"\n";
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		A6117BDA8DCFDEEE82A5CABA /* [CP] Embed Pods Frameworks */ = {
+		C59DA0FBD6956966B86A3779 /* [CP] Embed Pods Frameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-frameworks-${CONFIGURATION}-input-files.xcfilelist",
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-frameworks-${CONFIGURATION}-input-files.xcfilelist",
 			);
 			name = "[CP] Embed Pods Frameworks";
 			outputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-frameworks-${CONFIGURATION}-output-files.xcfilelist",
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-frameworks-${CONFIGURATION}-output-files.xcfilelist",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-frameworks.sh\"\n";
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-frameworks.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
-		A7FBA572FE4CD132416F70F6 /* [CP] Copy Pods Resources */ = {
+		E235C05ADACE081382539298 /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -338,43 +361,21 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp/Pods-RnDiffApp-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
-		C0CDF3ED8FCF46206B40ED3E /* [CP] Check Pods Manifest.lock */ = {
+		F6A41C54EA430FDDC6A6ED99 /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-resources-${CONFIGURATION}-input-files.xcfilelist",
 			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-RnDiffApp-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
-		DD9ABB1B92158F14184E2DED /* [CP] Embed Pods Frameworks */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-frameworks-${CONFIGURATION}-input-files.xcfilelist",
-			);
-			name = "[CP] Embed Pods Frameworks";
+			name = "[CP] Copy Pods Resources";
 			outputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-frameworks-${CONFIGURATION}-output-files.xcfilelist",
+				"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-resources-${CONFIGURATION}-output-files.xcfilelist",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-frameworks.sh\"\n";
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-RnDiffApp-RnDiffAppTests/Pods-RnDiffApp-RnDiffAppTests-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
 		FD10A7F022414F080027D42C /* Start Packager */ = {
@@ -411,7 +412,7 @@
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */,
+				13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,
 				13B07FC11A68108700A75B9A /* main.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -429,7 +430,7 @@
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 2457FA33456EA0041329431D /* Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig */;
+			baseConfigurationReference = 5B7EB9410499542E8C5724F5 /* Pods-RnDiffApp-RnDiffAppTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -437,7 +438,7 @@
 					"$(inherited)",
 				);
 				INFOPLIST_FILE = RnDiffAppTests/Info.plist;
-				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
@@ -456,12 +457,12 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 988EA9E2867120FEFD0C8D84 /* Pods-RnDiffApp-RnDiffAppTests.release.xcconfig */;
+			baseConfigurationReference = 89C6BE57DB24E9ADA2F236DE /* Pods-RnDiffApp-RnDiffAppTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
 				INFOPLIST_FILE = RnDiffAppTests/Info.plist;
-				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
@@ -480,7 +481,7 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 5B9B8B20698287CBFD534068 /* Pods-RnDiffApp.debug.xcconfig */;
+			baseConfigurationReference = 3B4392A12AC88292D35C810B /* Pods-RnDiffApp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CLANG_ENABLE_MODULES = YES;
@@ -506,7 +507,7 @@
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 500F6CC1B2407B54BD3F225D /* Pods-RnDiffApp.release.xcconfig */;
+			baseConfigurationReference = 5709B34CF0A7D63546082F79 /* Pods-RnDiffApp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CLANG_ENABLE_MODULES = YES;
@@ -533,7 +534,7 @@
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = NO;
 				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
+				CLANG_CXX_LANGUAGE_STANDARD = "c++17";
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
@@ -561,7 +562,7 @@
 				COPY_PHASE_STRIP = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				ENABLE_TESTABILITY = YES;
-				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = "";
+				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_DYNAMIC_NO_PIC = NO;
 				GCC_NO_COMMON_BLOCKS = YES;
@@ -577,7 +578,7 @@
 				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
 				GCC_WARN_UNUSED_FUNCTION = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
 				LD_RUNPATH_SEARCH_PATHS = (
 					/usr/lib/swift,
 					"$(inherited)",
@@ -589,6 +590,13 @@
 				);
 				MTL_ENABLE_DEBUG_INFO = YES;
 				ONLY_ACTIVE_ARCH = YES;
+				OTHER_CPLUSPLUSFLAGS = (
+					"$(OTHER_CFLAGS)",
+					"-DFOLLY_NO_CONFIG",
+					"-DFOLLY_MOBILE=1",
+					"-DFOLLY_USE_LIBCPP=1",
+				);
+				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
 				SDKROOT = iphoneos;
 			};
 			name = Debug;
@@ -598,7 +606,7 @@
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = NO;
 				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
+				CLANG_CXX_LANGUAGE_STANDARD = "c++17";
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
@@ -626,7 +634,7 @@
 				COPY_PHASE_STRIP = YES;
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = "";
+				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
@@ -635,7 +643,7 @@
 				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
 				GCC_WARN_UNUSED_FUNCTION = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
 				LD_RUNPATH_SEARCH_PATHS = (
 					/usr/lib/swift,
 					"$(inherited)",
@@ -646,6 +654,13 @@
 					"\"$(inherited)\"",
 				);
 				MTL_ENABLE_DEBUG_INFO = NO;
+				OTHER_CPLUSPLUSFLAGS = (
+					"$(OTHER_CFLAGS)",
+					"-DFOLLY_NO_CONFIG",
+					"-DFOLLY_MOBILE=1",
+					"-DFOLLY_USE_LIBCPP=1",
+				);
+				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
 				SDKROOT = iphoneos;
 				VALIDATE_PRODUCT = YES;
 			};
diff --git a/RnDiffApp/ios/RnDiffApp/AppDelegate.m b/RnDiffApp/ios/RnDiffApp/AppDelegate.mm
similarity index 21%
rename from RnDiffApp/ios/RnDiffApp/AppDelegate.m
rename to RnDiffApp/ios/RnDiffApp/AppDelegate.mm
index c3420dada6..e3debc9fd6 100644
--- a/RnDiffApp/ios/RnDiffApp/AppDelegate.m
+++ b/RnDiffApp/ios/RnDiffApp/AppDelegate.mm
@@ -4,37 +4,47 @@
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 
-#ifdef FB_SONARKIT_ENABLED
-#import <FlipperKit/FlipperClient.h>
-#import <FlipperKitLayoutPlugin/FlipperKitLayoutPlugin.h>
-#import <FlipperKitUserDefaultsPlugin/FKUserDefaultsPlugin.h>
-#import <FlipperKitNetworkPlugin/FlipperKitNetworkPlugin.h>
-#import <SKIOSNetworkPlugin/SKIOSNetworkAdapter.h>
-#import <FlipperKitReactPlugin/FlipperKitReactPlugin.h>
-
-static void InitializeFlipper(UIApplication *application) {
-  FlipperClient *client = [FlipperClient sharedClient];
-  SKDescriptorMapper *layoutDescriptorMapper = [[SKDescriptorMapper alloc] initWithDefaults];
-  [client addPlugin:[[FlipperKitLayoutPlugin alloc] initWithRootNode:application withDescriptorMapper:layoutDescriptorMapper]];
-  [client addPlugin:[[FKUserDefaultsPlugin alloc] initWithSuiteName:nil]];
-  [client addPlugin:[FlipperKitReactPlugin new]];
-  [client addPlugin:[[FlipperKitNetworkPlugin alloc] initWithNetworkAdapter:[SKIOSNetworkAdapter new]]];
-  [client start];
+#import <React/RCTAppSetupUtils.h>
+
+#if RCT_NEW_ARCH_ENABLED
+#import <React/CoreModulesPlugins.h>
+#import <React/RCTCxxBridgeDelegate.h>
+#import <React/RCTFabricSurfaceHostingProxyRootView.h>
+#import <React/RCTSurfacePresenter.h>
+#import <React/RCTSurfacePresenterBridgeAdapter.h>
+#import <ReactCommon/RCTTurboModuleManager.h>
+
+#import <react/config/ReactNativeConfig.h>
+
+static NSString *const kRNConcurrentRoot = @"concurrentRoot";
+
+@interface AppDelegate () <RCTCxxBridgeDelegate, RCTTurboModuleManagerDelegate> {
+  RCTTurboModuleManager *_turboModuleManager;
+  RCTSurfacePresenterBridgeAdapter *_bridgeAdapter;
+  std::shared_ptr<const facebook::react::ReactNativeConfig> _reactNativeConfig;
+  facebook::react::ContextContainer::Shared _contextContainer;
 }
+@end
 #endif
 
 @implementation AppDelegate
 
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
-#ifdef FB_SONARKIT_ENABLED
-  InitializeFlipper(application);
-#endif
+  RCTAppSetupPrepareApp(application);
 
   RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
-                                                   moduleName:@"RnDiffApp"
-                                            initialProperties:nil];
+
+#if RCT_NEW_ARCH_ENABLED
+  _contextContainer = std::make_shared<facebook::react::ContextContainer const>();
+  _reactNativeConfig = std::make_shared<facebook::react::EmptyReactNativeConfig const>();
+  _contextContainer->insert("ReactNativeConfig", _reactNativeConfig);
+  _bridgeAdapter = [[RCTSurfacePresenterBridgeAdapter alloc] initWithBridge:bridge contextContainer:_contextContainer];
+  bridge.surfacePresenter = _bridgeAdapter.surfacePresenter;
+#endif
+
+  NSDictionary *initProps = [self prepareInitialProps];
+  UIView *rootView = RCTAppSetupDefaultRootView(bridge, @"RnDiffApp", initProps);
 
   if (@available(iOS 13.0, *)) {
     rootView.backgroundColor = [UIColor systemBackgroundColor];
@@ -50,13 +60,74 @@ static void InitializeFlipper(UIApplication *application) {
   return YES;
 }
 
+/// This method controls whether the `concurrentRoot`feature of React18 is turned on or off.
+///
+/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html
+/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).
+/// @return: `true` if the `concurrentRoot` feture is enabled. Otherwise, it returns `false`.
+- (BOOL)concurrentRootEnabled
+{
+  // Switch this bool to turn on and off the concurrent root
+  return true;
+}
+
+- (NSDictionary *)prepareInitialProps
+{
+  NSMutableDictionary *initProps = [NSMutableDictionary new];
+
+#ifdef RCT_NEW_ARCH_ENABLED
+  initProps[kRNConcurrentRoot] = @([self concurrentRootEnabled]);
+#endif
+
+  return initProps;
+}
+
 - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
 {
 #if DEBUG
-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
+  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index"];
 #else
   return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
 #endif
 }
 
+#if RCT_NEW_ARCH_ENABLED
+
+#pragma mark - RCTCxxBridgeDelegate
+
+- (std::unique_ptr<facebook::react::JSExecutorFactory>)jsExecutorFactoryForBridge:(RCTBridge *)bridge
+{
+  _turboModuleManager = [[RCTTurboModuleManager alloc] initWithBridge:bridge
+                                                             delegate:self
+                                                            jsInvoker:bridge.jsCallInvoker];
+  return RCTAppSetupDefaultJsExecutorFactory(bridge, _turboModuleManager);
+}
+
+#pragma mark RCTTurboModuleManagerDelegate
+
+- (Class)getModuleClassFromName:(const char *)name
+{
+  return RCTCoreModulesClassProvider(name);
+}
+
+- (std::shared_ptr<facebook::react::TurboModule>)getTurboModule:(const std::string &)name
+                                                      jsInvoker:(std::shared_ptr<facebook::react::CallInvoker>)jsInvoker
+{
+  return nullptr;
+}
+
+- (std::shared_ptr<facebook::react::TurboModule>)getTurboModule:(const std::string &)name
+                                                     initParams:
+                                                         (const facebook::react::ObjCTurboModule::InitParams &)params
+{
+  return nullptr;
+}
+
+- (id<RCTTurboModule>)getModuleInstanceFromClass:(Class)moduleClass
+{
+  return RCTAppSetupDefaultModuleFromClass(moduleClass);
+}
+
+#endif
+
 @end
diff --git a/RnDiffApp/ios/RnDiffApp/Images.xcassets/AppIcon.appiconset/Contents.json b/RnDiffApp/ios/RnDiffApp/Images.xcassets/AppIcon.appiconset/Contents.json
index 118c98f746..81213230de 100644
--- a/RnDiffApp/ios/RnDiffApp/Images.xcassets/AppIcon.appiconset/Contents.json
+++ b/RnDiffApp/ios/RnDiffApp/Images.xcassets/AppIcon.appiconset/Contents.json
@@ -2,37 +2,52 @@
   "images" : [
     {
       "idiom" : "iphone",
-      "size" : "29x29",
-      "scale" : "2x"
+      "scale" : "2x",
+      "size" : "20x20"
     },
     {
       "idiom" : "iphone",
-      "size" : "29x29",
-      "scale" : "3x"
+      "scale" : "3x",
+      "size" : "20x20"
     },
     {
       "idiom" : "iphone",
-      "size" : "40x40",
-      "scale" : "2x"
+      "scale" : "2x",
+      "size" : "29x29"
     },
     {
       "idiom" : "iphone",
-      "size" : "40x40",
-      "scale" : "3x"
+      "scale" : "3x",
+      "size" : "29x29"
     },
     {
       "idiom" : "iphone",
-      "size" : "60x60",
-      "scale" : "2x"
+      "scale" : "2x",
+      "size" : "40x40"
     },
     {
       "idiom" : "iphone",
-      "size" : "60x60",
-      "scale" : "3x"
+      "scale" : "3x",
+      "size" : "40x40"
+    },
+    {
+      "idiom" : "iphone",
+      "scale" : "2x",
+      "size" : "60x60"
+    },
+    {
+      "idiom" : "iphone",
+      "scale" : "3x",
+      "size" : "60x60"
+    },
+    {
+      "idiom" : "ios-marketing",
+      "scale" : "1x",
+      "size" : "1024x1024"
     }
   ],
   "info" : {
-    "version" : 1,
-    "author" : "xcode"
+    "author" : "xcode",
+    "version" : 1
   }
 }
diff --git a/RnDiffApp/ios/RnDiffApp/main.m b/RnDiffApp/ios/RnDiffApp/main.m
index b1df44b953..d645c7246c 100644
--- a/RnDiffApp/ios/RnDiffApp/main.m
+++ b/RnDiffApp/ios/RnDiffApp/main.m
@@ -2,7 +2,8 @@
 
 #import "AppDelegate.h"
 
-int main(int argc, char * argv[]) {
+int main(int argc, char *argv[])
+{
   @autoreleasepool {
     return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
   }
diff --git a/RnDiffApp/ios/RnDiffAppTests/RnDiffAppTests.m b/RnDiffApp/ios/RnDiffAppTests/RnDiffAppTests.m
index fe83ad2442..fae48110ab 100644
--- a/RnDiffApp/ios/RnDiffAppTests/RnDiffAppTests.m
+++ b/RnDiffApp/ios/RnDiffAppTests/RnDiffAppTests.m
@@ -34,7 +34,8 @@
 
   __block NSString *redboxError = nil;
 #ifdef DEBUG
-  RCTSetLogFunction(^(RCTLogLevel level, RCTLogSource source, NSString *fileName, NSNumber *lineNumber, NSString *message) {
+  RCTSetLogFunction(
+      ^(RCTLogLevel level, RCTLogSource source, NSString *fileName, NSNumber *lineNumber, NSString *message) {
         if (level >= RCTLogLevelError) {
           redboxError = message;
         }
@@ -45,7 +46,8 @@
     [[NSRunLoop mainRunLoop] runMode:NSDefaultRunLoopMode beforeDate:[NSDate dateWithTimeIntervalSinceNow:0.1]];
     [[NSRunLoop mainRunLoop] runMode:NSRunLoopCommonModes beforeDate:[NSDate dateWithTimeIntervalSinceNow:0.1]];
 
-    foundElement = [self findSubviewInView:vc.view matching:^BOOL(UIView *view) {
+    foundElement = [self findSubviewInView:vc.view
+                                  matching:^BOOL(UIView *view) {
                                     if ([view.accessibilityLabel isEqualToString:TEXT_TO_LOOK_FOR]) {
                                       return YES;
                                     }
@@ -61,5 +63,4 @@
   XCTAssertTrue(foundElement, @"Couldn't find element with text '%@' in %d seconds", TEXT_TO_LOOK_FOR, TIMEOUT_SECONDS);
 }
 
-
 @end
diff --git a/RnDiffApp/package.json b/RnDiffApp/package.json
index 6900fb9665..2bd62fc84e 100644
--- a/RnDiffApp/package.json
+++ b/RnDiffApp/package.json
@@ -1,5 +1,5 @@
 {
-  "name": "rndiffapp",
+  "name": "RnDiffApp",
   "version": "0.0.1",
   "private": true,
   "scripts": {
@@ -10,18 +10,18 @@
     "lint": "eslint ."
   },
   "dependencies": {
-    "react": "17.0.2",
-    "react-native": "0.67.0-rc.1"
+    "react": "18.1.0",
+    "react-native": "0.70.0-rc.4"
   },
   "devDependencies": {
     "@babel/core": "^7.12.9",
     "@babel/runtime": "^7.12.5",
     "@react-native-community/eslint-config": "^2.0.0",
     "babel-jest": "^26.6.3",
-    "eslint": "7.14.0",
+    "eslint": "^7.32.0",
     "jest": "^26.6.3",
-    "metro-react-native-babel-preset": "^0.66.2",
-    "react-test-renderer": "17.0.2"
+    "metro-react-native-babel-preset": "^0.72.1",
+    "react-test-renderer": "18.1.0"
   },
   "jest": {
     "preset": "react-native"
